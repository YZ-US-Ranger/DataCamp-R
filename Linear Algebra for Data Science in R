## Creating Vectors in R
The `rep()` command in R creates a vector that repeats the same element a prescribed number of times, while the `seq()` command creates a vector that follows a prescribed pattern.

A vector can be manually created by using the `c()` command, which stands for "concatenate".

```
> rep(3, 3)
[1] 3 3 3

seq(2, 6, by = 2)
```

## The Algebra of Vectors
Multiplication of two vectors is a trickier topic theoretically, but in R, component-wise multiplication of two vectors is legal and accomplished using the `*` command.

In the case where they are not the same size, R recycles elements of the shorter vector to obtain the given result (with a warning message).

```
> x
[1] 1 2 3 4 5 6 7
> z
[1] 1 1 2
> print(x + z)
Warning message: longer object length is not a multiple of shorter object length
[1] 2 3 5 5 6 8 8
```

## Creating Matrices in R
The `matrix(a, nrow = b, ncol = c)` command in R creates a matrix that repeats the element `a` in a matrix with `b` rows and `c` columns. A matrix can be manually created by using the `c()` command as well.

```
# Create a matrix B and changing the byrow designation.
B <- matrix(c(1, 2, 3, 2), nrow = 2, ncol = 2, byrow = FALSE)
B <- matrix(c(1, 2, 3, 2), nrow = 2, ncol = 2, byrow = TRUE)
```

Multiplication of a vector by a matrix is accomplished using the `%*%` command.

## The Matrix Inverse
The `solve()` function in R will find the inverse of a matrix if it exists and provide an error if it does not.

```
# Take the inverse of the 2 by 2 identity matrix
solve(diag(2))

# Take the inverse of the matrix A
Ainv <- solve(A)
```
